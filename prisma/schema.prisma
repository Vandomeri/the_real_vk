// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model users {
  id         Int    @id @default(autoincrement())
  firstName  String
  middleName String
  lastName   String
  phone      String
  email      String
  password   String

  profile users_profile?

  chats chats[]

  posts posts[]

  comments comments[]

  role String @default("user")

  sentRequests friends[] @relation(name: "user")
  gotRequests  friends[] @relation(name: "friend")
}

model users_profile {
  id Int @id @default(autoincrement())

  avatar      String?   @default("defaultAvatar.png")
  dateOfBirth DateTime?
  sex         String
  aboutMe     String
  country     String
  city        String
  status      String?   @default("")
  user        users     @relation(fields: [usersId], references: [id])
  usersId     Int       @unique
}

model friends {
  id Int @id @default(autoincrement())

  friend   users  @relation(fields: [friendId], references: [id], name: "friend")
  friendId Int
  user     users? @relation(fields: [userId], references: [id], name: "user")
  userId   Int?

  isAproved Boolean @default(false)
}

model chats {
  id Int @id @default(autoincrement())

  messages messages[]
  users    users[]
}

model messages {
  id Int @id @default(autoincrement())

  text     String
  dateTime DateTime

  chats   chats? @relation(fields: [chatsId], references: [id])
  chatsId Int?

  senderId    Int
  recipientId Int
}

model posts {
  id Int @id @default(autoincrement())

  text  String
  image String?

  users  users? @relation(fields: [userId], references: [id])
  userId Int?

  comments comments[]

  created DateTime @default(now())
}

model comments {
  id Int @id @default(autoincrement())

  text String

  users  users? @relation(fields: [userId], references: [id])
  userId Int?

  posts   posts? @relation(fields: [postsId], references: [id])
  postsId Int?

  created DateTime @default(now())
}
